openapi: 3.0.0
info:
  version: 2.2.1
  title: Order Placement API
  description: This API is used to place orders and check on the order status.
  contact:
    email: openwealth@synpulse.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - description: Your server url
    url: https://www.openwealth.ch

externalDocs:
  description: Find out more about OpenWealth API specifications.
  url: https://openwealth.ch

tags:
  - name: accountaccess
    description: Account access operations.
  - name: event-notification
    description: Event notification operations.
  - name: event-notification-subscription
    description: Event notification subscription operations.
  - name: orderplacement
    description: Order placement operations.
  - name: orderstatus
    description: Order status operations.

security: []

paths:
  /orders:
    post:
      tags:
        - orderplacement
      summary: Posts a new order
      description: Posts a new order.
      operationId: postOrder
      parameters:
        - $ref: '#/components/parameters/correlation_in_header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestedOrder'
      responses:
        '202':
          description: Order accepted for further processing.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    get:
      tags:
        - orderstatus
      summary: Returns a list of open security orders
      description: |
        Returns all open orders to which the user of the API has access to. Paging is done based on the order object,
        i.e. if limit is set to 1, then 1 order will be returned per page.
      operationId: getOrders
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/correlation_in_header'
      responses:
        '200':
          description: Order list.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
            X-nextCursor:
              $ref: '#/components/headers/X-nextCursor'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /orders/{clientOrderId}:
    get:
      tags:
        - orderstatus
      summary: Returns a single security order
      description: Returns a specific security order.
      operationId: getOrderByClientOrderId
      parameters:
        - $ref: '#/components/parameters/path_clientOrderId'
        - $ref: '#/components/parameters/correlation_in_header'
      responses:
        '200':
          description: Receive a specific order with the corresponding allocations and status.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - orderplacement
      summary: Cancellation of a specific order
      description: Places the cancellation request for a specific order.
      operationId: deleteOrderByClientOrderId
      parameters:
        - $ref: '#/components/parameters/path_clientOrderId'
        - $ref: '#/components/parameters/correlation_in_header'
      responses:
        '202':
          description: Order cancellation received for further processing.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /accountaccesses:
    get:
      tags:
        - accountaccess
      summary: Returns list of accounts the requestor has access to
      description: |
        Returns list of accounts the requestor has access to with the type of access the requestor has. Paging is done based on the accountaccess
        object, i.e. if limit is set to 1, then 1 accountaccess object will be returned per page.
      operationId: getAccountAccesses
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/correlation_in_header'
      responses:
        '200':
          description: Returns list of accounts the requestor has access to.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/accountAccess'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /event-subscriptions:
    post:
      tags:
        - event-notification-subscription
      summary: Subscribe to Events
      description: Allows TPP to subscribe to specific events for the API.
      operationId: postEventSubscription
      parameters:
        - $ref: '#/components/parameters/correlation_in_header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventSubscriptionRequest'
      responses:
        '201':
          description: Subscription created.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventSubscription'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
    get:
      tags:
        - event-notification-subscription
      summary: View Subscriptions
      description: Allows TPP to view the event subscriptions.
      operationId: getEventSubscriptions
      parameters:
        - $ref: '#/components/parameters/correlation_in_header'
      responses:
        '200':
          description: Event Subscription read.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/eventSubscription'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
  /event-subscriptions/{eventSubscriptionId}:
    get:
      tags:
        - event-notification-subscription
      summary: View Subscription
      description: Allows TPP to view the event subscription.
      operationId: getEventSubscriptionByEventSubscriptionId
      parameters:
        - $ref: '#/components/parameters/path_eventSubscriptionId'
        - $ref: '#/components/parameters/correlation_in_header'
      responses:
        '200':
          description: Event Subscription read.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventSubscription'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
    put:
      tags:
        - event-notification-subscription
      summary: Change event subscription
      description: Changes event subscription.
      operationId: changeEventSubscriptionByEventSubscriptionId
      parameters:
        - $ref: '#/components/parameters/path_eventSubscriptionId'
        - $ref: '#/components/parameters/correlation_in_header'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventSubscription'
      responses:
        '200':
          description: Event subscription changed
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventSubscription'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
    delete:
      tags:
        - event-notification-subscription
      summary: Delete event subscription
      description: Deletes event subscriptions.
      operationId: deleteEventSubscriptionsByEventSubscriptionId
      parameters:
        - $ref: '#/components/parameters/path_eventSubscriptionId'
        - $ref: '#/components/parameters/correlation_in_header'
      responses:
        '204':
          description: Event subscription deleted.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
  /event-subscriptions/{eventSubscriptionId}/event-notifications:
    get:
      tags:
        - event-notification
      summary: Get event notifications
      description: Get aggregated event-notification list.
      parameters:
        - $ref: '#/components/parameters/path_eventSubscriptionId'
        - $ref: '#/components/parameters/fromEventDateTime'
        - $ref: '#/components/parameters/afterEventId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/correlation_in_header'
      responses:
        '200':
          description: aggregated event-notification list.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notificationOrderPlacement'
        '404':
          $ref: '#/components/responses/404'
components:
  parameters:
    path_clientOrderId:
      in: path
      name: clientOrderId
      required: true
      schema:
        type: string
        maxLength: 20
      description: The security order id. This Id corresponds with the clientOrderIdentification.
    path_eventSubscriptionId:
      in: path
      name: eventSubscriptionId
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 40
      description: Unique identification as assigned by the API exposing party to uniquely identify the callback URL resource.
    limit:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
      description: Maximum number of items to return.
    cursor:
      in: query
      name: cursor
      required: false
      schema:
        type: string
      description: An opaque string value used for pagination.
    fromEventDateTime:
      in: query
      name: fromEventDate
      schema:
        type: string
        format: date-time
      description: Date from which events are considered.
      example: 2022-10-26T07:58:30.996+0100
    afterEventId:
      in: query
      name: afterEventId
      schema:
        $ref: '#/components/schemas/eventSubscriptionId'
      description: Event Id after which events are considered.
    correlation_in_header:
      in: header
      name: X-Correlation-ID
      required: true
      schema:
        type: string
      description: Unique ID (defined by the caller) which will be reflected back in the response.
  headers:
    X-Correlation-ID:
      description: Client defined ID from request to correlates HTTP requests between a client and server.
      schema:
        type: string
        example: f058ebd6-02f7-4d3f-942e-904344e8cde5
    X-nextCursor:
      description: An opaque string value, or an empty string if there are no more results.
      required: false
      schema:
        type: string
  schemas:
    statementDateTime:
      type: string
      format: date-time
      example: '2018-04-13T11:11:11Z'
      description: Date and time of the statement creation (UTC Timestamp). In accordance with ISO 8601.
    amount:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      example: '12000'
      description: Absolute amount.
    orderQuantity:
      type: object
      description: Ordered quantity.
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        type:
          type: string
          description: Type of the amount.
          example: unitsNumber
          enum:
            - unitsNumber
            - nominal
    financialInstrumentDetails:
      type: object
      required:
        - financialInstrumentIdentification
      properties:
        financialInstrumentIdentification:
          type: object
          required:
            - identification
            - type
          properties:
            identification:
              type: string
              example: CH0012005267
              description: Instrument identification.
            type:
              type: string
              example: isin
              description: Type of the instrument identification.
              enum:
                - isin
                - sedol
                - cusip
                - ric
                - tickerSymbol
                - bloomberg
                - cta
                - quick
                - wertpapier
                - dutch
                - valoren
                - sicovam
                - belgian
                - common
                - otherProprietaryIdentification
    placeOfTrade:
      type: object
      description: Market in which a trade transaction is to be or has been executed.
      properties:
        marketIdentificationCode:
          type: string
          maxLength: 4
          description: |
            Market Identifier Code. Identification of a financial market, as stipulated in the norm ISOMarket Identifier Code.
            Identification of a financial market, as stipulated in the norm ISO 10383 "Codes for exchanges and market identifications".
          example: XSWX
        marketDescription:
          type: string
          description: Description of the market when no Market Identification Code is available.
          example: OTC
    Currency:
      title: Currency
      type: string
      description: ISO 4217 code
      pattern: '^[A-Z]{3}$'
      example: CHF
    limitPrice:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: Limit price per unit of quantity (e.g. per share).
      example: '17.8'
    stopPrice:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: Price of this (last) fill.
      example: '17.8'
    dateTime:
      title: DateTime
      type: string
      format: date-time
      example: 2018-04-13T16:00+01:00
    bulkOrderDetails:
      required:
        - side
        - orderQuantity
        - financialInstrumentDetails
        - currency
        - executionType
        - timeInForce
        - numberOfAllocations
      type: object
      properties:
        side:
          type: string
          description: Side taken by a party on an order.
          example: buy
          enum:
            - buy
            - sell
        orderQuantity:
          $ref: '#/components/schemas/orderQuantity'
        displayQuantity:
          $ref: '#/components/schemas/amount'
        numberOfAllocations:
          type: number
          format: integer
          example: 5
          description: Indicates number of orders to be combined for average pricing and allocation.
        financialInstrumentDetails:
          $ref: '#/components/schemas/financialInstrumentDetails'
        placeOfTrade:
          $ref: '#/components/schemas/placeOfTrade'
        currency:
          $ref: '#/components/schemas/Currency'
        executionType:
          type: string
          description: Type of the execution of the order.
          example: limit
          enum:
            - market
            - limit
            - stop
            - stopLimit
        limitPrice:
          description: Limit price per unit of quantity (e.g. per share)
          $ref: '#/components/schemas/limitPrice'
        stopPrice:
          description: Stop price per unit of quantity (e.g. per share)
          $ref: '#/components/schemas/stopPrice'
        timeInForce:
          type: string
          description: Specifies how long the order remains in effect.
          example: day
          enum:
            - day
            - goodTillCancel
            - atTheOpening
            - immediateOrCancel
            - fillOrKill
            - goodTillCrossing
            - goodTillDate
            - atTheClose
            - goodThroughCrossing
            - atCrossing
            - goodForTime
            - goodForAuction
            - goodForMonth
        expiryDateTime:
          $ref: '#/components/schemas/dateTime'
        additionalDetails:
          type: string
          maxLength: 128
          description: Provides additional details on the order which can not be included within the structured fields of the message.
          example: at pre Market and today
    account:
      type: object
      properties:
        identification:
          type: string
          maxLength: 35
          example: 8765-43219
          description: Unambiguous identification for the account.
        type:
          type: string
          description: Indicates the type of the account.
          example: safekeepingAccount
          enum:
            - cashAccount
            - safekeepingAccount
            - other
    requestedAllocation:
      type: object
      required:
        - accounts
        - clientAllocationIdentification
        - amount
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/account'
        clientAllocationIdentification:
          type: string
          description: Unambiguous identifier for the individual allocation of the bulk order, as assigned by the instructing party.
          example: '321321321'
        amount:
          description: Quantity to be allocated to specific safekeeping account
          $ref: '#/components/schemas/amount'
    allocationCancellationReason:
      type: object
      properties:
        code:
          type: string
          description: Cancelled reason expressed as a code.
          enum:
            - accountIdentificationMissing
            - accountInvalidForOrderPlacement
            - accountTypeMissing
            - accountTypeNotMatchingAccount
            - allocationQuantityTooHigh
            - cashAccountMissing
            - cashAccountNotFound
            - insufficientBuyingPower
            - insufficientQuantityAvailable
            - invalidCurrencyForAccount
            - pretradeCheckFailed
            - safekeepingAccountMissing
            - safekeepingAccountNotFound
            - tooManyCashAccountsIndicated
            - tooManySafekeepingAccounts
            - valueTooHigh
            - zeroQuantity
            - other
          example: zeroQuantity
        proprietary:
          type: string
          description: Cancelled reason expressed as a proprietary description that provides more details about the reason of the cancellation.
          example: Cancelled by client.
    executedQuantity:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: Total quantity (e.g. number of shares) filled.
      example: '100'
    remainingQuantity:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: |
        Quantity open for further execution.
        If the status is cancelled,  expired, or rejected (in which case the order is no longer active) then remainingQuantity could be 0,
        otherwise remainingQuantity = orderQuantity - executedQuantity.
      example: '20'
    remainingAllocation:
      type: object
      description: Provides an overview of what quantity has already been allocated to the allocation and what quantity is still outstanding.
      properties:
        executedQuantity:
          description: Total quantity (e.g. number of shares) filled.
          $ref: '#/components/schemas/executedQuantity'
        remainingQuantity:
          description: |
            Quantity open for further execution.
            If the status is cancelled,  expired, or rejected (in which case the order is no longer active) then remainingQuantity could be 0,
            otherwise remainingQuantity = orderQuantity - executedQuantity.
          $ref: '#/components/schemas/remainingQuantity'
    averagePrice:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: Calculated average price of all fills on this order.
      example: '17.8'
    date:
      title: Date
      type: string
      format: date
      example: '2018-04-13'
    bookingDate:
      type: object
      description: Indicates the booking date for an order or allocation.
      properties:
        date:
          $ref: '#/components/schemas/date'
    creditDebitIndicator:
      type: string
      enum:
        - credit
        - debit
      example: debit
      description: Specifies if the amount is a debit (negative) or credit (positive) amount.
    foreignExchangeRate:
      type: object
      properties:
        sourceCurrency:
          description: Currency of the amount to be converted in a currency conversion.
          $ref: '#/components/schemas/Currency'
        rate:
          type: string
          pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
          maxLength: 22
          example: '1.0963'
          description: |
            Indicates the rate of a fx transaction for one source currency unit to the target currency. E.g. 1GBP=xxxEUR, where the source
            currency is GBP and the target currency is EUR.
        targetCurrency:
          description: Currency into which an amount is to be converted in a currency conversion.
          $ref: '#/components/schemas/Currency'
        fxType:
          type: string
          description: Defines, if the indicated fx rate includes (costPrice) or excludes (dealPrice) fees and taxes.
          example: costPrice
          enum:
            - costPrice
            - dealPrice
    billingAmount:
      type: object
      properties:
        type:
          type: string
          description: Indicates the type of billing amount.
          example: grossTradeAmount
          enum:
            - grossTradeAmount
            - grossSettlementAmount
            - netSettlementAmount
            - netBillingAmount
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/Currency'
        creditDebitIndicator:
          $ref: '#/components/schemas/creditDebitIndicator'
        foreignExchangeRate:
          $ref: '#/components/schemas/foreignExchangeRate'
    currency:
      title: Currency
      type: string
      description: ISO 4217 code
      pattern: '^[A-Z]{3}$'
      example: CHF
    accruedInterest:
      type: object
      properties:
        numberDaysAccrued:
          type: number
          format: integer
          example: 28
          description: Specifies the number of days used for calculating the accrued interest amount.
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        creditDebitIndicator:
          $ref: '#/components/schemas/creditDebitIndicator'
        foreignExchangeRate:
          $ref: '#/components/schemas/foreignExchangeRate'
    feeOrTax:
      type: object
      properties:
        feeType:
          type: string
          description: Indicates the type of fee/tax.
          enum:
            - stampDuty
            - withholdingTax
            - capitalGainTax
            - financialTransactionTax
            - otherTaxes
            - transactionFee
            - brokerageFee
            - managementFee
            - courtage
            - custodyFee
            - exchangeFee
            - thirdPartyFee
            - otherFee
            - others
          example: stampDuty
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        creditDebitIndicator:
          $ref: '#/components/schemas/creditDebitIndicator'
        foreignExchangeRate:
          $ref: '#/components/schemas/foreignExchangeRate'
    billingDetails:
      type: object
      properties:
        billingAmountList:
          type: array
          items:
            $ref: '#/components/schemas/billingAmount'
        accruedInterests:
          $ref: '#/components/schemas/accruedInterest'
        feesOrTaxList:
          type: array
          items:
            $ref: '#/components/schemas/feeOrTax'
    completeAllocation:
      type: object
      description: Completed allocation
      properties:
        allocationIdentification:
          type: string
          description: |
            Unambiguous identifier of the individual allocation of the bulk order, as assigned by the confirming party.
            Corresponds with the transactionIdentification of the OpenWealth Custody Services API.
          example: 123-123123
        executedQuantity:
          description: Total quantity (e.g. number of shares) filled.
          $ref: '#/components/schemas/executedQuantity'
        averagePrice:
          description: The average price for quantity that has traded.
          $ref: '#/components/schemas/averagePrice'
        bookingDate:
          $ref: '#/components/schemas/bookingDate'
        billingDetails:
          $ref: '#/components/schemas/billingDetails'
    allocation:
      required:
        - requestedAllocation
      type: object
      description: Extended details regarding the allocations including validity of the allocation and billing details.
      properties:
        requestedAllocation:
          $ref: '#/components/schemas/requestedAllocation'
        allocationCancellationReasonList:
          items:
            $ref: '#/components/schemas/allocationCancellationReason'
        remainingAllocation:
          $ref: '#/components/schemas/remainingAllocation'
        completeAllocationList:
          items:
            $ref: '#/components/schemas/completeAllocation'
    extendedOrder:
      required:
        - clientOrderIdentification
        - bulkOrderDetails
      type: object
      description: Order object with extended allocation information.
      properties:
        clientOrderIdentification:
          type: string
          example: 123-123123
          description: Unambiguous identifier for the bulk order, as assigned by the instructing party.
          maxLength: 20
        orderDateTime:
          type: string
          format: date-time
          example: '2018-04-13T11:11:11Z'
          description: Date and time the order has been received. In accordance with ISO 8601.
          readOnly: true
        orderIdentification:
          type: string
          description: Unambiguous identifier for the bulk order, as assigned by the confirming party.
          example: 321-321321
          readOnly: true
        bulkOrderDetails:
          $ref: '#/components/schemas/bulkOrderDetails'
        allocationList:
          type: array
          items:
            $ref: '#/components/schemas/allocation'
    orderStatus:
      type: string
      description: Shows in which stage of its life cycle an order is.
      enum:
        - acknowledged
        - accepted
        - customerRelease
        - placed
        - partiallyFilled
        - filled
        - executed
        - cancelled
        - partiallyCancelled
        - marketCancelled
        - pendingCancel
        - rejected
        - partiallyRejected
        - marketRejected
        - expired
        - partiallyExpired
        - marketExpired
      example: partiallyFilled
    statusDateTime:
      type: string
      format: date-time
      example: '2018-04-13T11:11:11Z'
      description: |
        Indicates the date and time at which the status has been updated into the status indicated under "status" (UTC Timestamp). In accordance
        with ISO 8601.
    orderCancellationReason:
      type: object
      description: Indicates the reason, why an order is invalid/cancelled/rejected.
      properties:
        code:
          type: string
          description: Cancelled reason expressed as a code.
          enum:
            - allocationInvalid
            - cancelledByHub
            - cancelledByInstructingParty
            - cancelledByOther
            - cannotContainMarketIdentificationAndMarketDescription
            - currencyNotSupportedForFinancialInstrument
            - displayQuantityNotImplemented
            - endOfLife
            - executionTypeInconsequential
            - executionTypeNotSupported
            - expiryDateTimeInThePast
            - expiryDateTimeMissing
            - expiryDateTimeNotAllowed
            - financialInstrumentIdentificationNotUnique
            - financialInstrumentIdentificationTypeNotSupported
            - financialInstrumentNotAllowedViaInterface
            - financialInstrumentNotFound
            - financialInstrumentNotTradedOnMarket
            - icebergOrderTooLarge
            - invalidPrices
            - limitPriceMissingForExecutionType
            - limitPriceNotAllowedForExecutionType
            - marketCurrentlyBlockedForTrading
            - marketQuoteNotAvailableForProduct
            - maximumNumberOfAllocationsExceeded
            - numberOfAllocationsDeviateFromAllocationsProvided
            - numberOfAllocationsEmpty
            - numberOfAllocationsZero
            - orderQuantityDeviatesFromSumOfAllocationQuantities
            - orderQuantityTooHigh
            - orderQuantityTooSmall
            - orderQuantityTypeNotImplemented
            - orderQuantityTypeWrong
            - orderTypeNotSupportedByMarket
            - placeOfTradeNotImplemented
            - placeOfTradeNotSupported
            - productExpired
            - selectedTimeInForceNotImplemented
            - stopPriceMissingForExecutionType
            - stopPriceNotAllowedForExecutionType
            - timeInForceAndExpiryDateInconsistent
            - valueTooHigh
            - wrongDenomination
            - other
          example: endOfLife
        proprietary:
          type: string
          description: Cancelled reason expressed as a proprietary description that provides more details about the reason of the cancellation.
          example: Cancelled by client
    dayOrderQuantity:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: |
        The orderQuantity less all quantity (adjusted for stock splits) that traded on previous days.
        DayOrderQuantity = OrderQuantity - (executedQuantity - dayExecutedQuantity).
      example: '15'
    dayExecutedQuantity:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: Quantity on an order that has traded today.
      example: '5'
    dayAveragePrice:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: Calculated average price of all fills on this order.
      example: '17.8'
    orderStatusHistory:
      type: object
      description: Provides the status of the order was at a certain time in its lifecycle.
      properties:
        status:
          $ref: '#/components/schemas/orderStatus'
        statusDateTime:
          $ref: '#/components/schemas/statusDateTime'
    orderState:
      required:
        - status
        - executedQuantity
        - remainingQuantity
      type: object
      properties:
        status:
          $ref: '#/components/schemas/orderStatus'
        statusDateTime:
          $ref: '#/components/schemas/statusDateTime'
        orderCancellationReasonList:
          items:
            $ref: '#/components/schemas/orderCancellationReason'
        executedQuantity:
          $ref: '#/components/schemas/executedQuantity'
        remainingQuantity:
          $ref: '#/components/schemas/remainingQuantity'
        averagePrice:
          description: Calculated average price of all fills on this order.
          $ref: '#/components/schemas/averagePrice'
        dayOrderQuantity:
          $ref: '#/components/schemas/dayOrderQuantity'
        dayExecutedQuantity:
          $ref: '#/components/schemas/dayExecutedQuantity'
        dayAveragePrice:
          description: The average price for quantity that has traded today.
          $ref: '#/components/schemas/dayAveragePrice'
        factor:
          type: string
          pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
          maxLength: 22
          example: '100'
          description: |
            For Fixed Income: Amorization Factor for deriving Current face from Original face for ABS or MBS securities.
            Note the fraction may be greater than, equal to or less than.
            In TIPS securities this is the Inflation index.
            Qty * Factor * Price = Gross Trade Amount

            For Derivatives: Contract Value Factor by which price must be adjusted to determine the true nominal value of one futures/options
            contract.
            (Qty * Price) * Factor = Nominal Value
        orderStatusHistoryList:
          items:
            $ref: '#/components/schemas/orderStatusHistory'
    orderDate:
      type: object
      description: Indicates a date with a dateType relevant for the respective order.
      properties:
        date:
          $ref: '#/components/schemas/date'
        dateType:
          type: string
          example: bookingDate
          enum:
            - transactionDate
            - bookingDate
            - valueDate
    order:
      required:
        - extendedOrder
        - orderState
      type: object
      properties:
        statementDateTime:
          $ref: '#/components/schemas/statementDateTime'
        extendedOrder:
          $ref: '#/components/schemas/extendedOrder'
        orderState:
          $ref: '#/components/schemas/orderState'
        dateList:
          items:
            $ref: '#/components/schemas/orderDate'
    commonErrorType:
      title: Common Error Type
      description: Error Types for CommonErrorResponse.
      type: string
      enum:
        - /problems/INVALID_PAYLOAD
        - /problems/MALFORMED_PAYLOAD
        - /problems/INVALID_TOKEN
        - /problems/EXPIRED_TOKEN
        - /problems/INSUFFICIENT_PRIVILEGES
        - /problems/NO_ACCESS_TO_RESOURCE
        - /problems/RESOURCE_DOES_NOT_EXIST
        - /problems/RESOURCE_NOT_READY
        - /problems/RESOURCE_TOO_LARGE
        - /problems/WRONG_METHOD
        - /problems/OPERATION_NOT_ALLOWED
        - /problems/TECHNICAL_ERROR
        - /problems/NOT_IMPLEMENTED
        - /problems/SERVICE_UNAVAILABLE
      example: /problems/TECHNICAL_ERROR
    commonErrorResponse:
      title: CommonErrorResponse
      type: object
      properties:
        type:
          $ref: '#/components/schemas/commonErrorType'
        title:
          type: string
          example: This is the general problem description
        detail:
          type: string
          example: Detailed problem description with respect to the current request
        instance:
          type: string
          example: path/to/corresponding/resource
    requestedOrder:
      required:
        - clientOrderIdentification
        - bulkOrderDetails
        - requestedAllocationList
      type: object
      properties:
        clientOrderIdentification:
          type: string
          example: 123-123123
          description: Unambiguous identifier for the bulk order, as assigned by the instructing party.
          maxLength: 20
        orderDateTime:
          type: string
          format: date-time
          example: '2018-04-13T11:11:11Z'
          description: Date and time of the order placement (UTC Timestamp). In accordance with ISO 8601.
          readOnly: true
        orderIdentification:
          type: string
          description: Unambiguous identifier for the bulk order, as assigned by the confirming party.
          example: 321-321321
          readOnly: true
        bulkOrderDetails:
          $ref: '#/components/schemas/bulkOrderDetails'
        requestedAllocationList:
          type: array
          items:
            $ref: '#/components/schemas/requestedAllocation'
    accountAccess:
      type: object
      required:
        - account
        - accessType
      properties:
        account:
          $ref: '#/components/schemas/account'
        accessType:
          type: string
          description: Indicates what type of access the requestor has for the specified account.
          enum:
            - read
            - write
          example: read
    eventSubscriptionId:
      description: Unique identification as assigned by the API exposing party to uniquely identify the callback URL resource.
      type: string
      minLength: 1
      maxLength: 40
      example: 3v3n7subscr1p70n
    eventType:
      description: Event type the subscription should apply to AND reason why a notification is sent.
      type: string
      enum:
        - heartbeat
        - order:doneForDay
        - order:orderStatusUpdated
        - order:pendingReplace
        - order:replaced
        - order:restated
        - order:suspended
        - order:trade
        - order:tradeCancel
        - order:tradeCorrect
      example: order:orderStatusUpdated
    eventSubscription:
      type: object
      required:
        - eventSubscriptionId
      properties:
        eventSubscriptionId:
          $ref: '#/components/schemas/eventSubscriptionId'
        callbackUrl:
          description: |
            Callback URL for a TPP hosted service. Will be used by API exposing party, in conjunction with the resource name, to construct a URL
            to send event notifications to.
          type: string
          format: uri
          example: https://examplecallbackuri.com
        eventTypes:
          description: Array of event types the subscription applies to. An empty list indicates that no notifications are sent.
          type: array
          items:
            $ref: '#/components/schemas/eventType'
    eventSubscriptionRequest:
      type: object
      required:
        - callbackUrl
      properties:
        callbackUrl:
          description: |
            Callback URL for a TPP hosted service. Will be used by API exposing party, in conjunction with the resource name, to construct a URL
            to send event notifications to.
          type: string
          format: uri
          example: https://examplecallbackuri.com
        eventTypes:
          description: Array of event types the subscription applies to. An empty list indicates that no notifications are sent.
          type: array
          items:
            $ref: '#/components/schemas/eventType'
    version:
      description: Indicates to which version of the respective API the notification is belonging to.
      type: string
      enum:
        - v1
        - v2
        - v3
      example: v2
    notificationId:
      description: Identification of the notification.
      type: string
      example: 120066c9-58a1-432b-aa60-712fae7f143e
    lastQuantity:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: Quantity (e.g. shares) bought/sold on this (last) fill.
      example: '30'
    lastPrice:
      type: string
      pattern: '^[0-9]{1,12}([.][0-9]{1,9})?$'
      maxLength: 22
      description: Price of this (last) fill.
      example: '17.8'
    notificationOrderPlacement:
      description: Notification for the order placement API that is pushed to the TPP.
      type: object
      properties:
        eventSubscriptionId:
          $ref: '#/components/schemas/eventSubscriptionId'
        version:
          $ref: '#/components/schemas/version'
        eventType:
          $ref: '#/components/schemas/eventType'
        resourceLink:
          description: Link to resource that triggered the event notification.
          type: string
          example: /api/openwealth/order-placement/v2/orders/abcd1234
        created:
          description: Timestamp - Date and time including timezone on which the notification has been created, according to ISO8601
          $ref: '#/components/schemas/dateTime'
        id:
          description: Identification (UUID) of this notification.
          $ref: '#/components/schemas/notificationId'
        predecessorId:
          description: Identification (UUID) of the notification that predeceeds this notification.
          $ref: '#/components/schemas/notificationId'
        orderStatus:
          description: Status of the requested resource notification.
          $ref: '#/components/schemas/orderStatus'
        executedQuantity:
          description: Total quantity (e.g. number of shares) filled.
          $ref: '#/components/schemas/executedQuantity'
        averagePrice:
          description: Calculated average price of all fills on this order.
          $ref: '#/components/schemas/averagePrice'
        remainingQuantity:
          description: |
            Quantity open for further execution.
            If the status is cancelled, expired, or rejected (in which case the order is no longer active) then remainingQuantity could be 0,
            otherwise remainingQuantity = orderQuantity - executedQuantity.
          $ref: '#/components/schemas/remainingQuantity'
        dayExecutedQuantity:
          description: Quantity on an order that has traded today.
          $ref: '#/components/schemas/dayExecutedQuantity'
        dayAveragePrice:
          description: The average price for quantity that has traded today.
          $ref: '#/components/schemas/dayAveragePrice'
        lastQuantity:
          description: Quantity (e.g. shares) bought/sold on this (last) fill.
          $ref: '#/components/schemas/lastQuantity'
        lastPrice:
          description: Price of this (last) fill.
          $ref: '#/components/schemas/lastPrice'
  responses:
    '400':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: |
        Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed
        request syntax.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '401':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '403':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Forbidden - The server understood the request but refuses to authorize it.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '404':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: |
        Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one
        exists.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '405':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: |
        Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the
        target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '409':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlate HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Conflict - The request conflicts with the current state of the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '500':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '501':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Not Implemented - The server does not support the functionality required to fulfill the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '503':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: |
        Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled
        maintenance.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    '504':
      headers:
        Content-Type:
          schema:
            type: string
            description: application/problem+json; charset=utf-8 according to RFC7807
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: Response language - always en
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Gateway Timeout - The server did not get a response in time that it needed in order to complete the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
